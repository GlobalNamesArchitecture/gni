---
apiVersion: v1
kind: Service
metadata:
  name: resolver
  namespace: gn
  labels:
    app: resolver
    tier: frontend
spec:
  type: NodePort
  ports:
    - port: 80
      targetPort: 80
  selector:
    app: resolver
    tier: frontend

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: resolver
  namespace: gn
spec:
  replicas: 3
  template:
    metadata:
      namespace: gn
      name: resolver
      labels:
        app: resolver
        tier: frontend
    spec:
      # volumes:
      #   - name: app-vol
      #     emptyDir: {}
      containers:
        - name: resolver
          image: gnames/resolver:0.0.1
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: 80
          #   initialDelaySeconds: 180
          #   timeoutSeconds: 3

          env:
            - name: RAILS_ENV
              value: production
            - name: GNI_UNICORN_WORKER_PROCESSES
              valueFrom:
                configMapKeyRef:
                  name: resolver
                  key: unicorn.workers
            - name: GNI_BASE_URL
              valueFrom:
                configMapKeyRef:
                  name: resolver
                  key: server.url
            - name: GNI_DATABASE_HOST
              valueFrom:
                configMapKeyRef:
                  name: resolver
                  key: db
            - name: GNI_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: resolver
                  key: db.database
            - name: GNI_SOLR_URL
              valueFrom:
                configMapKeyRef:
                  name: resolver
                  key: solr.url
            - name: GNI_DATABASE_USER
              valueFrom:
                secretKeyRef:
                  name: resolver
                  key: db.user
            - name: GNI_DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: resolver
                  key: db.user.password
          ports:
            - containerPort: 80
              name: http
          # volumeMounts:
          #   - name: app-vol
          #     mountPath: /app
