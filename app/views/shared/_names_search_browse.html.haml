- @data_source ||= nil
.boxed.centered

  - form_tag( (@data_source ? "/data_sources/#{@data_source.id}" : '/name_strings') , :method => :get) do
    = text_field_tag :search_term, nil, {:size => "40"}
    = submit_tag 'Search'
    - if current_user && current_user.data_sources && !@data_source
      = submit_tag 'Search Mine'
    &nbsp;&nbsp;&nbsp;
    %span#search_help{:title => "How to search?"}= @show_help ? 'Hide Help' : 'Help'
    %br/
    - NameString::LATIN_CHARACTERS.each do |char|
      - does_exist = @data_source ? NameString.find_by_sql(["select 1 from name_strings ns join name_indices ni on ns.id = ni.name_string_id where ni.data_source_id = ? and ns.name like ? limit 1", @data_source.id, char.downcase + "%"]) : true
      - unless does_exist.blank?
        = link_to char, 'expand' => char
      - else
        %span{:style => 'color:#aaa'}= char
    #search_help_body{:style => "display:#{@show_help ? 'block' : 'none'}"}
      %h4 Search Options

      %span.green Examples:
      - ['Parus major', 'gen:Parus sp:major', 'can:Parus maj*', 'gen:Parus yr:1822', 'au:Lang* yr:1888'].each do |srch|
        = '&nbsp;' * 1
        = link_to in_quotes(srch), 'search_term' => srch, 'help' => 'true'

      %table.data.bordered{:style => 'margin-left:auto;margin-right:auto;'}
        %thead
          %tr
            %th Modifier
            %th Meaning
            %th Explanation
            %th Examples
        %tbody
          %tr
            %td{:style => 'font-size:1.5em'} *
            %td wild card
            %td Search by part of a word
            %td= link_to 'planta*', 'search_term' => 'planta*', 'help' => 'true'
          %tr
            %td exact:
            %td exact name string
            %td
              Search for the exact match of a literal string
              %br/
              (other modifiers will be ignored)
            %td= link_to 'exact:Parus major', 'search_term' => 'exact:Parus major', 'help' => 'true'
          %tr
            %td ns:
            %td name string
            %td
              Search for literal string from its beginning
              %br/
              (other modifiers will be ignored)
            %td= link_to 'ns:parus maj*', 'search_term' => 'ns:parus maj*', 'help' => 'true'
          %tr
            %td.green can:
            %td canonical form
            %td
              Search name without authors
              %br/
              (other modifiers will be ignored)
            %td= link_to 'can:parus major', 'search_term' => 'can:parus major', 'help' => 'true'
          %tr
            %td.green uni:
            %td uninomial
            %td Search for higher taxa
            %td= link_to 'uni:parus', 'search_term' => 'uni:parus', 'help' => 'true'
          %tr
            %td.green gen:
            %td genus
            %td Search by genus epithet of species name
            %td= link_to 'gen:parus', 'search_term' => 'gen:parus', 'help' => 'true'
          %tr
            %td.green sp:
            %td species
            %td Search by species epithet
            %td= link_to 'sp:major', 'search_term' => 'sp:major', 'help' => 'true'
          %tr
            %td.green ssp:
            %td subspecies
            %td Search by infraspecies epithet
            %td= link_to 'ssp:major', 'search_term' => 'ssp:major', 'help' => 'true'
          %tr
            %td.green au:
            %td author
            %td Search by author word
            %td= link_to 'au:Shipunov', 'search_term' => 'au:Shipunov', 'help' => 'true'
          %tr
            %td.green yr:
            %td year
            %td Search by year
            %td= link_to 'yr:2005', 'search_term' => 'yr:2005', 'help' => 'true'

      Note:
      %span.green green
      modifiers work only for parsed names
- if @char_triples
  %h4 Browse by clicking three-letter links (grey links are empty)
  %table{:style=> 'margin:0;width:100%'}
    %tr
    - @char_triples.each do |a|
      %td
        - a.each do |c|
          - join = @data_source ? "join name_indices ni on ns.id = ni.name_string_id" : ''
          - cond = @data_source && @data_source.id.class.name == 'Fixnum' ? "and ni.data_source_id = #{@data_source.id}" : ''
          - does_exist = NameString.find_by_sql(["select 1 from name_strings ns #{join} where ns.normalized like ? #{cond} limit 1", c + '%'])
          - unless does_exist.blank?
            = link_to c , 'search_term' => "ns:" + c + "*"
          - else
            %span{:style => 'color:#ddd'}= c
          %br/
- else
  - if !@name_strings.blank?
    %p
      Results
      %b== #{@item_first} - #{@item_last}
      of total
      %b= @name_strings.total_entries
      for
      %em== '#{@search_term.gsub('%','*')}'
    #data_layout
      #name_column_left{:class=> (@name_strings.size == 0 ? 'empty' : '')}
        = will_paginate @name_strings
        - first_row = true
        - for name_string in @name_strings
          - name_string_class = first_row ? 'name_string_active' : ''
          - first_row = false
          .name_string{:name_string_id => name_string.id, :class => name_string_class}= h name_string.name
        %br/
        = will_paginate @name_strings
      #name_column_right
    #data_clear_layout
  - elsif   @empty_search
    .info-div{:style=>'align:center'}
      == Your search '#{@search_term}' did not return any records.
      %br/
      %br/
      Please use a wildcard character '*' if you are not searching for an exact string. Wildcard searches should include at least 3 latin letters.
      %br/
      %br/
      Search examples: 'Plantago major', 'Plantago major*', 'plantago*', 'pla*'
